name: Auto Merge Bot PRs

on:
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    
    # 仅当 PR 由 bot 创建且有特定标签时执行
    if: |
      github.actor == 'github-actions[bot]' || 
      contains(github.event.pull_request.labels.*.name, 'auto-merge') ||
      startsWith(github.event.pull_request.head.ref, 'bot/')
    
    steps:
      - name: Check PR status
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // 检查 PR 是否由 bot 创建
            if (pr.user.login === 'github-actions[bot]' || pr.head.ref.startsWith('bot/')) {
              console.log('✓ PR created by bot');
              return true;
            }
            
            // 检查是否有 auto-merge 标签
            const hasAutoMergeLabel = pr.labels.some(label => label.name === 'auto-merge');
            if (hasAutoMergeLabel) {
              console.log('✓ PR has auto-merge label');
              return true;
            }
            
            return false;
      
      - name: Wait for checks
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            console.log('Waiting for PR checks to complete...');
            
            // 轮询检查状态，最多等待 5 分钟
            const maxWait = 5 * 60 * 1000;
            const startTime = Date.now();
            
            while (Date.now() - startTime < maxWait) {
              const checks = await github.rest.checks.listForRef({
                owner: owner,
                repo: repo,
                ref: pr.head.sha
              });
              
              const allCompleted = checks.data.check_runs.every(check => 
                check.status === 'completed'
              );
              
              const allSucceeded = checks.data.check_runs.every(check => 
                check.conclusion === 'success' || check.conclusion === 'skipped'
              );
              
              if (allCompleted) {
                if (allSucceeded) {
                  console.log('✓ All checks passed');
                  return true;
                } else {
                  console.log('✗ Some checks failed');
                  return false;
                }
              }
              
              console.log('Waiting for checks...');
              await new Promise(resolve => setTimeout(resolve, 10000));
            }
            
            console.log('Timeout waiting for checks');
            return false;
      
      - name: Enable auto-merge
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash'
              });
              
              console.log('✓ PR merged successfully');
              
              // 在原始 Issue 上评论
              const issueNumber = parseInt(pr.body.match(/#(\d+)/)?.[1]);
              if (issueNumber) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: '✅ **PR Merged!** Activity data has been successfully added to the repository.'
                });
              }
            } catch (error) {
              console.log('Could not auto-merge:', error.message);
            }
