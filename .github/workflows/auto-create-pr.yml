name: Auto Create PR

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'Activity URL'
        required: true
        type: string
      issue_number:
        description: 'Source issue number'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Git
        run: |
          git config user.name "activity-bot"
          git config user.email "bot@open-source-deadlines.app"
      
      - name: Create PR branch and commit
        env:
          ACTIVITY_URL: ${{ github.event.inputs.url }}
          ISSUE_NUM: ${{ github.event.inputs.issue_number }}
        run: |
          # 创建新分支
          BRANCH_NAME="bot/activity-$(date +%s)"
          git checkout -b "$BRANCH_NAME"
          
          # 使用 Python 添加 YAML 数据
          python3 << 'PYTHON_EOF'
          import os
          
          url = os.environ['ACTIVITY_URL']
          issue_num = os.environ['ISSUE_NUM']
          
          # 读取现有文件
          try:
            with open('data/activities.yml', 'r', encoding='utf-8') as f:
              content = f.read()
          except FileNotFoundError:
            content = ""
          
          # 准备新数据
          yaml_entry = f"""
- title: "Activity from Issue"
  description: "Activity extracted from {url}"
  start_date: "2024-01-01"
  end_date: "2024-01-01"
  location: "Online"
  url: "{url}"
  tags: ["auto-extracted"]
"""
          
          # 追加到文件
          with open('data/activities.yml', 'a', encoding='utf-8') as f:
            f.write(yaml_entry)
          
          print("Activity data added to activities.yml")
          PYTHON_EOF
          
          # 提交
          git add data/activities.yml
          git commit -m "feat: Add activity from Issue #$ISSUE_NUM"
          git push origin "$BRANCH_NAME"
          
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "ISSUE_NUM=$ISSUE_NUM" >> $GITHUB_ENV
      
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ACTIVITY_URL="${{ github.event.inputs.url }}"
          
          gh pr create \
            --title "Add activity from Issue #${{ env.ISSUE_NUM }}" \
            --body "Automatically created PR with activity data.

**Activity URL**: ${ACTIVITY_URL}

Please review and merge if the data is correct." \
            --head "${{ env.BRANCH_NAME }}" \
            --base main
      
      - name: Comment on issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ github.event.inputs.issue_number }} \
            --body "✅ **PR Created!**

A pull request has been automatically created with the activity data."
