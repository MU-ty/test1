name: Activity Extractor Bot

on:
  issue_comment:
    types: [created, edited]

permissions:
  issues: write
  contents: read

jobs:
  extract-activity:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@activity-bot extract')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML requests pillow pydantic

      - name: Parse issue comment
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body;
            const urlMatch = body.match(/(https?:\/\/[^\s]+)/);
            const url = urlMatch ? urlMatch[1] : null;
            const category = body.includes('conference') ? 'conference' : 
                           body.includes('competition') ? 'competition' : 'activity';
            
            console.log(`Extracted URL: ${url}`);
            console.log(`Category: ${category}`);
            
            core.setOutput('url', url);
            core.setOutput('category', category);
            core.setOutput('issue_number', context.issue.number);

      - name: Extract activity information
        id: extract
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ steps.parse.outputs.issue_number }}
          ACTIVITY_URL: ${{ steps.parse.outputs.url }}
          ACTIVITY_CATEGORY: ${{ steps.parse.outputs.category }}
          # 使用 GitHub Models API (若有模型更换，可在此调整)
          GITHUB_MODELS_API_KEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python scripts/ai-bot/extract_activity.py

      - name: Post results as comment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            const resultsFile = 'ai-bot-results.json';
            
            let comment = '';
            if (fs.existsSync(resultsFile)) {
              const results = JSON.parse(fs.readFileSync(resultsFile, 'utf8'));
              
              if (results.success) {
                comment = `## ✅ 活动信息提取成功\n\n`;
                comment += `\`\`\`yaml\n${results.yaml_content}\n\`\`\`\n\n`;
                comment += `**验证信息:**\n`;
                comment += `- ID 唯一性: ${results.validation.id_unique ? '✅' : '❌'}\n`;
                comment += `- 标签检查: ${results.validation.tags_info}\n`;
                comment += `\n**后续步骤:**\n`;
                comment += `1. 请审查上述内容\n`;
                comment += `2. 如有调整需求，请回复评论\n`;
                comment += `3. 确认无误后，我会自动创建 Pull Request\n`;
              } else {
                comment = `## ❌ 提取失败\n\n**错误信息:**\n\`\`\`\n${results.error}\n\`\`\`\n\n`;
                comment += `**建议:**\n`;
                comment += `- 请确保提供的是有效的活动网址\n`;
                comment += `- 或直接在 issue 中附加活动信息截图\n`;
              }
            } else {
              comment = `## ⚠️ 提取过程异常\n\n请查看 Action 日志获取详细信息。`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  create-pull-request:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@activity-bot confirm')
    steps:
      - uses: actions/checkout@v4
      
      - name: Read extracted data
        id: read_data
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('ai-bot-results.json')) {
              const data = JSON.parse(fs.readFileSync('ai-bot-results.json', 'utf8'));
              core.setOutput('yaml_content', data.yaml_content);
              core.setOutput('category', data.category);
            }
      
      - name: Create Pull Request
        if: steps.read_data.outputs.yaml_content
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat: 添加活动信息 (来自 Issue #${{ github.event.issue.number }})"
          title: "feat: 添加新的开源活动信息"
          body: |
            由 AI Bot 自动从 Issue #${{ github.event.issue.number }} 生成
            
            请 Maintainer 审核此信息的准确性。
          branch: ai-bot/activity-${{ github.event.issue.number }}
          delete-branch: true
